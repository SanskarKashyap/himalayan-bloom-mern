import { useEffect, useState } from 'react';

import './App.css';

const API_BASE_URL = import.meta.env.VITE_API_BASE_URL ?? 'http://localhost:5000/api';

function App() {
  const [users, setUsers] = useState([]);
  const [form, setForm] = useState({ name: '', email: '' });
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');

  useEffect(() => {
    void loadUsers();
  }, []);

  async function loadUsers() {
    setLoading(true);
    setError('');
    try {
      const response = await fetch(`${API_BASE_URL}/users`);
      if (!response.ok) {
        throw new Error('Failed to fetch users');
      }
      const data = await response.json();
      setUsers(data);
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  }

  async function handleSubmit(event) {
    event.preventDefault();
    setError('');
    try {
      const response = await fetch(`${API_BASE_URL}/users`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(form),
      });

      if (!response.ok) {
        throw new Error('Failed to create user');
      }

      setForm({ name: '', email: '' });
      await loadUsers();
    } catch (err) {
      setError(err.message);
    }
  }

  function handleChange(event) {
    const { name, value } = event.target;
    setForm((current) => ({ ...current, [name]: value }));
  }

  return (
    <main className="app">
      <h1>MERN Boilerplate</h1>
      <section className="card">
        <h2>Create User</h2>
        <form onSubmit={handleSubmit} className="form">
          <label>
            Name
            <input
              type="text"
              name="name"
              value={form.name}
              onChange={handleChange}
              required
            />
          </label>
          <label>
            Email
            <input
              type="email"
              name="email"
              value={form.email}
              onChange={handleChange}
              required
            />
          </label>
          <button type="submit">Create</button>
        </form>
      </section>

      <section className="card">
        <div className="list-header">
          <h2>Users</h2>
          <button onClick={loadUsers} disabled={loading}>
            {loading ? 'Refreshingâ€¦' : 'Refresh'}
          </button>
        </div>
        {error && <p className="error">{error}</p>}
        <ul className="user-list">
          {users.length === 0 && !loading && <li>No users yet</li>}
          {users.map((user) => (
            <li key={user._id}>
              <span>{user.name}</span>
              <span>{user.email}</span>
            </li>
          ))}
        </ul>
      </section>
    </main>
  );
}

export default App;
